services:
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: payments_backend
    restart: always
    ports:
      - "8000:80"
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
      - APP_ENV=dev
    volumes:
      - ./backend:/var/www/html
      - ./docker/backend/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./docker/backend/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    command: >
      bash -c "composer install --no-interaction &&
               chown -R appuser:appuser . &&
               apache2-foreground"
    networks:
      - network

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    container_name: payments_mysql
    restart: always
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password --sql-mode="STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION"
    hostname: mysql
    volumes:
      - payments_db_data:/var/lib/mysql
      - ./docker/mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/dump:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main
      MYSQL_USER: kit-starter
      MYSQL_PASSWORD: kit-starter
    networks:
      - network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: payments_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      - mysql
    links:
      - mysql
    networks:
      - network

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: payments_frontend
    volumes:
      - ./frontend:/app
    command: >
      bash -c "npm install &&
               chown -R $(stat -c "%U:%G" package.json) node_modules &&
               npm run serve"
    ports:
      - "8081:8080"
    networks:
      - network

  nginx:
    image: nginx:alpine
    container_name: payments_nginx
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - network

  certbot:
    image: certbot/certbot
    container_name: payments_certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

networks:
  network:

volumes:
  payments_db_data:
    name: payments_db_data